on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  workflow_call:
    secrets:
      CURSEFORGE_API_TOKEN:
        required: true
      DISCORD_ANNOUNCER_WEBHOOK:
        required: true

jobs:

  generate_changelog:
    name: Build > Create and Commit Changelog > Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout ModTools repo
        uses: actions/checkout@v3
        with:
          path: ModTools

      - name: Copy templates from ModTools
        shell: pwsh
        run: |
          Copy-Item ./ModTools/.github/ISSUE_TEMPLATE ./.github/ISSUE_TEMPLATE/ -Force
          Copy-Item ./ModTools/.github/workflows/*.md ./.github/workflows/ -Force
          Copy-Item ./ModTools/.github/workflows/gradle.yml ./.github/workflows/ -Force
          Copy-Item ./ModTools/.github/workflows/potential-duplicates.yml ./.github/workflows/ -Force
          Copy-Item ./ModTools/.github/FUNDING.yml ./.github -Force
          Remove-Item ./ModTools -Recurse -Force

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with: {java-version: 1.8}

      - name: Load Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup Build
        run: 'chmod 777 gradlew'

      - name: Get the version
        id: get_version
        run: |
          echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -c 12-)
          echo ::set-output name=VERSION_WITH_PREFIX::$(echo $GITHUB_REF)

      - name: Build with Gradle
        id: build
        env:
          USE_ALPHAS: false
        run: |
          PROJECT_VERSION=${{ steps.get_version.outputs.VERSION }} ./gradlew setupGithubActions build --max-workers=1

      - name: Get .jar name
        id: get_jar_name
        run: |
          ls ./build/libs/
          echo ::set-output name=jar_name::$(ls ./build/libs/)

      - name: Create release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            "./build/libs/${{ steps.get_jar_name.outputs.jar_name }}"

      - name: Update main CHANGELOG.md
        id: changelog
        uses: Requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          tag: ${{ github.ref_name }}

      - name: Generate Curseforge Changelog
        id: changelog-generator
        uses: Helmisek/conventional-changelog-generator@v1.0.6-release
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          commit-types: "fix:Bug Fixes,feat:Features,refactor:Refactoring"
          template-path: ".github/workflows/CURSEFORGE_CHANGELOG.tpl.md"
      - name: Write curseforge changelog to file
        uses: DamianReeves/write-file-action@master
        with:
          path: ${{ github.workspace }}/.github/CURSEFORGE_CHANGELOG.md
          contents: |
            ${{steps.changelog-generator.outputs.changelog}}
          write-mode: overwrite

      # - name: Upload Release to CurseForge
      #   if: ${{ steps.build.outputs.curse_relations != '' }}
      #   id: publish_with_relations
      #   uses: itsmeow/curseforge-upload@master
      #   with:
      #     changelog: "${{steps.changelog-generator.outputs.changelog}}"
      #     changelog_type: html
      #     # display_name: use the filename
      #     relations: "${{ steps.build.outputs.curse_relations }}"
      #     file_path: "./build/libs/${{ steps.get_jar_name.outputs.jar_name }}"
      #     game_endpoint: minecraft
      #     game_versions: "${{ steps.build.outputs.curse_versions }}"
      #     project_id: "${{ steps.build.outputs.curse_project_id }}"
      #     release_type: release
      #     token: "${{ secrets.CURSEFORGE_API_TOKEN }}"

      # - name: Upload Release to CurseForge
      #   if: ${{ steps.build.outputs.curse_relations == '' }}
      #   id: publish_without_relations
      #   uses: itsmeow/curseforge-upload@master
      #   with:
      #     changelog: "${{steps.changelog-generator.outputs.changelog}}"
      #     changelog_type: html
      #     # display_name: use the filename
      #     relations: "${{ steps.build.outputs.curse_relations }}"
      #     file_path: "./build/libs/${{ steps.get_jar_name.outputs.jar_name }}"
      #     game_endpoint: minecraft
      #     game_versions: "${{ steps.build.outputs.curse_versions }}"
      #     project_id: "${{ steps.build.outputs.curse_project_id }}"
      #     release_type: release
      #     token: "${{ secrets.CURSEFORGE_API_TOKEN }}"

      - name: Update ./forge/update.json
        shell: pwsh
        run: |
          $version = ${{ steps.get_version.outputs.VERSION }}
          $oldJson = Get-Content .\.forge\update.json | ConvertFrom-Json
          Write-Host "Content before: "
          Get-Content .\.forge\update.json
          $oldJson.promos.'1.12.2-latest' = $version
          $oldJson.promos.'1.12.2-recommended' = $version
          $gradleProperties = Get-Content ./gradle.properties
          if ($($gradleProperties -match "\surl=") -match "url=(.*)") { $oldJson.homepage =$matches[1] }
          $newJson = $oldJson | ConvertTo-Json
          Set-Content -Path .\.forge\update.json -Value $newJson
          Write-Host "Content after: "
          Get-Content .\.forge\update.json

      - name: Commit Changelogs and update.json
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: 1.12.2
          commit_message: 'docs: update changelogs for ${{ github.ref_name }}'

    #   - name: Generate Discord Announcement With Changelog
    #     id: discord-changelog-generator
    #     uses: Helmisek/conventional-changelog-generator@v1.0.6-release
    #     with:
    #       repo-token: ${{ secrets.GITHUB_TOKEN }}
    #       commit-types: "fix:Bug Fixes,feat:Features,refactor:Refactoring"
    #       template-path: ".github/workflows/DISCORD_CHANGELOG.tpl.md"
    #       current-tag: ${{ steps.get_version.outputs.VERSION }}

    #   - name: Write Discord Announcement to File
    #     uses: DamianReeves/write-file-action@master
    #     with:
    #       path: ${{ github.workspace }}/.github/DISCORD_ANNOUNCEMENT.txt
    #       contents: |
    #         ${{steps.discord-changelog-generator.outputs.changelog}}
    #       write-mode: overwrite

    #   - name: Replace Tokens in Discord Announcement
    #     if: ${{ steps.build.outputs.curse_relations == '' }}
    #     uses: cschleiden/replace-tokens@v1
    #     with:
    #       files: ${{ github.workspace }}/.github/DISCORD_ANNOUNCEMENT.txt
    #     env:
    #       MOD_NAME: "${{ steps.build.outputs.name }}"
    #       URL: "${{ steps.build.outputs.url }}"
    #       FILE_ID: "${{ steps.publish_without_relations.outputs.id }}"

    #   - name: Replace Tokens in Discord Announcement
    #     if: ${{ steps.build.outputs.curse_relations != '' }}
    #     uses: cschleiden/replace-tokens@v1
    #     with:
    #       files: ${{ github.workspace }}/.github/DISCORD_ANNOUNCEMENT.txt
    #     env:
    #       MOD_NAME: "${{ steps.build.outputs.name }}"
    #       URL: "${{ steps.build.outputs.url }}"
    #       FILE_ID: "${{ steps.publish_with.outputs.id }}"

    #   - name: Read Discord Announcement From File
    #     id: announcement-content
    #     uses: juliangruber/read-file-action@v1
    #     with:
    #       path: ${{ github.workspace }}/.github/DISCORD_ANNOUNCEMENT.txt

    #   - name: Discord Webhook Action
    #     uses: tsickert/discord-webhook@v4.0.0
    #     with:
    #       webhook-url: ${{ secrets.DISCORD_ANNOUNCER_WEBHOOK }}
    #       content: "${{ steps.announcement-content.outputs.content }}"
